name: Dart

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        package: ['kiota_abstractions', 'kiota_http', 'kiota_serialization_form', 'kiota_serialization_text']

    name: '${{ matrix.package }}: Analyze & Test'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: dart-lang/setup-dart@v1

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ env.PUB_CACHE }}
          key: ${{ runner.os }}-pub

      - name: Install dependencies
        run: dart pub get
        working-directory: packages/${{ matrix.package }}

      - name: Verify formatting
        continue-on-error: true
        run: dart format --output=none --set-exit-if-changed .
        working-directory: packages/${{ matrix.package }}

      - name: Run build_runner
        if: contains(fromJson('[ "kiota_abstractions", "kiota_http", "kiota_serialization_form" ]'), matrix.package)
        run: dart run build_runner build --delete-conflicting-outputs
        working-directory: packages/${{ matrix.package }}

      - name: Analyze project source
        continue-on-error: true
        run: dart analyze --fatal-infos
        working-directory: packages/${{ matrix.package }}

      - name: Run tests
        run: dart test
        working-directory: packages/${{ matrix.package }}
